#!/bin/bash
#
# ssht      This shell script f**ks yellow circle !!!
#
# chkconfig: 2345 80 30
# description: F**k yellow circle !!!
# processname: ssht
# config: /etc/ssht
# pidfile: /var/run/ssht.pid

### BEGIN INIT INFO
# Provides: 
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop ssht
# Description: ssht
### END INIT INFO

# Check that we're a privileged user
[ `id -u` = 0 ] || exit 4

# Check that networking is up.
[ "${NETWORKING}" = "no" ] && exit 1

prog="ssht"

start() {
	# Start daemons.
	ret=0
	echo -n $"Starting $prog: "
	/usr/local/sbin/tunnel-daemon >> /var/log/$prog 2>&1 &
	RETVAL=$?
	echo
	let ret+=$RETVAL
	[ $ret -eq 0 ] && return 0 || return 1
}

stop() {
	# Stop daemons.
	echo -n $"Shutting down $prog: "
	[ -f /var/run/${prog}.pid ] && kill -9 `cat /var/run/${prog}.pid`
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] && rm -f /var/run/${prog}.pid
	return $RETVAL
}

if [[ -f /var/run/${prog}.pid ]]
then
	if [[ -e /proc/`cat /var/run/${prog}.pid` ]]
	then
		running=0
	fi
else
	running=1
fi

# See how we were called.
case "$1" in
	start)
		[ $running -eq 0 ] && echo $prog" is already running!" && exit 0
		start
		RETVAL=$?
		;;
	stop)
		if [ $running -eq 0 ]
		then
			stop
			RETVAL=$?
		else
			echo $prog" is not running!"
			exit 1
		fi
		;;
	restart)
		stop
		start
		RETVAL=$?
		;;
	status)
		if [ $running -eq 0 ]
		then
			echo $prog" is already running!"
			echo "PID: "`cat /var/run/${prog}.pid`
		else
			echo $prog" is not running!"
		fi
		RETVAL=0
		;;
	*)
		echo $"Usage: $0 {start|stop|restart|status}"
		RETVAL=2
esac

exit $RETVAL
